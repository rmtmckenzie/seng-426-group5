/*
 * EChequeBankServer.java
 *
 * Created on June 6, 2007, 2:11 PM
 */
package eCheque;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author Saad
 */
public class EChequeBankServer extends javax.swing.JFrame {

	private boolean serverStartFlag;
	private BankServer runBank;	
	private Thread bankServerThread;
	private boolean already;

	/**
	 * Creates new form EChequeBankServer
	 */
	public EChequeBankServer() {
		initComponents();
		already = false;
		serverStartFlag = false;
		jTBankShell.append("\n");
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jPanel1 = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      jTBankShell = new javax.swing.JTextArea();
      jBStart = new javax.swing.JButton();
      jBStop = new javax.swing.JButton();

      setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
      setTitle("e-Cheque Bank Server");

      jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

      jTBankShell.setColumns(20);
      jTBankShell.setFont(new java.awt.Font("Courier New", 1, 12)); // NOI18N
      jTBankShell.setRows(5);
      jTBankShell.setText("\n>> e-Cheque Bank Server Waiting");
      jScrollPane1.setViewportView(jTBankShell);

      jBStart.setText("Start");
      jBStart.addMouseListener(new java.awt.event.MouseAdapter() {
         public void mouseClicked(java.awt.event.MouseEvent evt) {
            jBStartMouseClicked(evt);
         }
      });

      jBStop.setText("Stop");
      jBStop.addMouseListener(new java.awt.event.MouseAdapter() {
         public void mouseClicked(java.awt.event.MouseEvent evt) {
            jBStopMouseClicked(evt);
         }
      });

      org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
      jPanel1.setLayout(jPanel1Layout);
      jPanel1Layout.setHorizontalGroup(
         jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
               .add(jScrollPane1)
               .add(jPanel1Layout.createSequentialGroup()
                  .add(jBStart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 39, Short.MAX_VALUE)
                  .add(jBStop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
      );
      jPanel1Layout.setVerticalGroup(
         jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 189, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(jBStart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
               .add(jBStop, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(0, 10, Short.MAX_VALUE))
      );

      org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      setSize(new java.awt.Dimension(321, 317));
      setLocationRelativeTo(null);
   }// </editor-fold>//GEN-END:initComponents

    private void jBStopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBStopMouseClicked

		 if (serverStartFlag) {
			 try {
				 //JOptionPane.showMessageDialog(null, "The server is going to shutdown (5 secs).", "System Information", JOptionPane.INFORMATION_MESSAGE);
				 //jTBankShell.append(">> The server is shutting down in 10 secs...\n");				 
				 runBank.shutdown();				 
				 jTBankShell.append(">> Server stopped: " + getCurrentTimeString() + "\n");
				 serverStartFlag = false;				 
			 } catch (Exception exp) {
				 jTBankShell.append(">> Network Error: " + exp.getMessage() + ".\n");				 
			 }
		 } else {
			 jTBankShell.append(">> Server is not running.\n");
		 }
    }//GEN-LAST:event_jBStopMouseClicked

    private void jBStartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBStartMouseClicked

		 if (!serverStartFlag) {
			 jTBankShell.append(">> Starting up the server...\n");
			 try {
				 
				 if( already == false){
					runBank = new BankServer();					
					already = true;
				 }
				 bankServerThread = new Thread(runBank);
				 bankServerThread.start();
				 serverStartFlag = true;
				 

				 jTBankShell.append(">> Server started: " + getCurrentTimeString() + "\n");
			 } catch (IOException exp) {
				 jTBankShell.append(">> Network Error: " + exp.getMessage() + ".\n");
			 }
		 } else {
			 jTBankShell.append(">> Server is already running.\n");			 
		 }
    }//GEN-LAST:event_jBStartMouseClicked

	private String getCurrentTimeString() {
		Calendar cal = Calendar.getInstance();
		cal.getTime();
		SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
		return sdf.format(cal.getTime());
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new EChequeBankServer().setVisible(true);
			}
		});
	}
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton jBStart;
   private javax.swing.JButton jBStop;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JTextArea jTBankShell;
   // End of variables declaration//GEN-END:variables
}
